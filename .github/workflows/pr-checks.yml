name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pr-validation:
    name: PR Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linting
        run: npm run lint
        
      - name: Run type checking
        run: npm run type-check
        
      - name: Check formatting
        run: npm run format:check
        
      - name: Run tests with coverage
        run: npm run test:coverage
        env:
          NODE_ENV: test
          
      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production
          NEXT_PUBLIC_USE_MOCK_AUTH: 'true'
          
      - name: Check bundle size
        run: |
          echo "Checking bundle size..."
          du -sh .next/static/chunks/* | sort -hr | head -10
          
      - name: Validate environment configuration
        run: |
          echo "Validating environment configuration..."
          node -e "
            try {
              require('./lib/config/environment.ts');
              console.log('‚úÖ Environment configuration is valid');
            } catch (error) {
              console.error('‚ùå Environment configuration error:', error.message);
              process.exit(1);
            }
          "
          
      - name: Security audit
        run: npm audit --audit-level=moderate
        continue-on-error: true
        
      - name: Comment PR with build info
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Get build size info
            const buildPath = '.next';
            let buildSize = 'Unknown';
            
            try {
              const { execSync } = require('child_process');
              buildSize = execSync('du -sh .next', { encoding: 'utf8' }).trim();
            } catch (error) {
              console.log('Could not get build size:', error.message);
            }
            
            const comment = `## üöÄ PR Build Summary
            
            ‚úÖ **Build Status**: Successful
            üì¶ **Build Size**: ${buildSize}
            üß™ **Tests**: Passed
            üîç **Linting**: Passed
            üìù **Type Check**: Passed
            
            This PR is ready for review!`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

